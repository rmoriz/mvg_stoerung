[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "mvg_stoerung"
version = "1.0.0"
description = "MVG Stoerung - Filters incidents from MVG disruption messages"
readme = "README.md"
requires-python = ">=3.8"
license = {text = "CC0-1.0"}
authors = [
    {name = "MVG Parser Team"},
]
keywords = ["mvg", "munich", "transport", "incidents", "api", "stoerung"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: CC0 1.0 Universal (CC0 1.0) Public Domain Dedication",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: Dynamic Content",
]
dependencies = [
    "requests>=2.25.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=6.0.0",
    "coverage>=6.0",
    "black>=22.0",
    "isort>=5.0",
    "flake8>=4.0",
    "mypy>=0.900",
    "bandit>=1.7",
    "safety>=2.0",
    "pre-commit>=2.15",
]

[project.scripts]
mvg-stoerung = "mvg_incident_parser:main"

[project.urls]
Homepage = "https://github.com/your-org/mvg_stoerung"
Repository = "https://github.com/your-org/mvg_stoerung.git"
Issues = "https://github.com/your-org/mvg_stoerung/issues"

[tool.setuptools]
py-modules = ["mvg_incident_parser"]

[tool.black]
line-length = 127
target-version = ['py38']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
line_length = 127
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true

[tool.flake8]
max-line-length = 127
extend-ignore = ["E203", "W503"]
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".venv",
    ".tox",
]

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
ignore_missing_imports = true

[tool.bandit]
exclude_dirs = ["tests", "test_*.py"]
skips = ["B101"]  # Skip assert_used test

[tool.coverage.run]
source = ["."]
omit = [
    "test_*.py",
    "setup.py",
    ".venv/*",
    "build/*",
    "dist/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\bProtocol\):",
    "@(abc\.)?abstractmethod",
]